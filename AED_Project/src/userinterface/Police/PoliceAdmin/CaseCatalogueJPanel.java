/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Police.PoliceAdmin;

import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.CaseWorkRequest;
import Business.WorkQueue.GunViolenceCaseWorkRequest;
import Business.WorkQueue.RobberyCaseWorkRequest;
import Business.WorkQueue.SubstanceAbuseCaseWorkRequest;
import Business.WorkQueue.WorkRequest;
import com.teamdev.jxbrowser.chromium.Browser;
import com.teamdev.jxbrowser.chromium.swing.BrowserView;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;
import userinterface.Analysis.AnalysisByIncidentType;
import userinterface.Analysis.AnalysisBySubstanceType;

/**
 *
 * @author joshiaditya
 */
public class CaseCatalogueJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CaseCatalogue
     */
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private Network network;

    public CaseCatalogueJPanel(JPanel userProcessContainer, Enterprise enterprise, Network network) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.network = network;
        populateTable();
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblCases.getModel();
        model.setRowCount(0);
        
        for(Organization org : enterprise.getOrganizationDirectory().getOrganizationList()){
            for(UserAccount ua : org.getUserAccountDirectory().getUserAccountList()){
                for(WorkRequest req : ua.getWorkQueue().getWorkRequestList()){
                    if((req instanceof GunViolenceCaseWorkRequest) || 
                            (req instanceof SubstanceAbuseCaseWorkRequest) || 
                            (req instanceof RobberyCaseWorkRequest)){
                        
                        Object[] row = new Object[6];
                        row[0] = req;
                        row[1] = ((CaseWorkRequest) req).getIncidentType();
                        row[2] = ((CaseWorkRequest) req).getZipCode();
                        row[3] = org.getName();
                        row[4] = ua.getEmployee().getName();
                        row[5] = req.getStatus();

                        model.addRow(row);
                    }
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCases = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Master Case Catalogue");

        tblCases.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Case ID", "Incident Type", "Address", "Police Station", "Police Officer", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCases);
        if (tblCases.getColumnModel().getColumnCount() > 0) {
            tblCases.getColumnModel().getColumn(0).setResizable(false);
            tblCases.getColumnModel().getColumn(1).setResizable(false);
            tblCases.getColumnModel().getColumn(2).setResizable(false);
            tblCases.getColumnModel().getColumn(3).setResizable(false);
            tblCases.getColumnModel().getColumn(4).setResizable(false);
            tblCases.getColumnModel().getColumn(5).setResizable(false);
        }

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jButton1.setText("View analysis by Incident Type");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("View analysis by Substance Type");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("View Analysis on map");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel1))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(btnBack))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(33, 33, 33)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 720, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButton1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton3)
                        .addComponent(jButton2)))
                .addContainerGap(181, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton1, jButton2, jButton3});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(28, 28, 28)
                .addComponent(jButton2)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(jButton3))
                .addGap(117, 117, 117))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        AnalysisByIncidentType analysisByIncidentType = new AnalysisByIncidentType(userProcessContainer, network);
        userProcessContainer.add("AnalysisByIncidentType", analysisByIncidentType);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        AnalysisBySubstanceType analysisBySubstanceType = new AnalysisBySubstanceType(userProcessContainer, network);
        userProcessContainer.add("AnalysisBySubstanceType", analysisBySubstanceType);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Browser browser = new Browser();
        BrowserView view = new BrowserView(browser);
        
        String coordinates = null;
        
        coordinates = "";
       /* 
                  "          {lat: 30.774, lng: -80.190},\n"
                + "          {lat: 35.466, lng: -66.118},\n"
                + "          {lat: 32.321, lng: -64.757},\n"
                + "          {lat: 28.774, lng: -80.190}
*/
        JFrame frame = new JFrame();
        frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        frame.add(view, BorderLayout.CENTER);
        frame.setSize(700, 500);
        frame.setLocationRelativeTo(null);
        frame.setVisible(true);

        browser.loadHTML("<!DOCTYPE html>\n"
                + "<html>\n"
                + "  <head>\n"
                + "    <title>User-editable Shapes</title>\n"
                + "    <meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\">\n"
                + "    <meta charset=\"utf-8\">\n"
                + "    <style>\n"
                + "      /* Always set the map height explicitly to define the size of the div\n"
                + "       * element that contains the map. */\n"
                + "      #map {\n"
                + "        height: 100%;\n"
                + "      }\n"
                + "      /* Optional: Makes the sample page fill the window. */\n"
                + "      html, body {\n"
                + "        height: 100%;\n"
                + "        margin: 0;\n"
                + "        padding: 0;\n"
                + "      }\n"
                + "    </style>\n"
                + "  </head>\n"
                + "  <body>\n"
                + "    <div id=\"map\"></div>\n"
                + "    <script>\n"
                + "      // This example adds a user-editable polygon to the map.\n"
                + "      function initMap() {\n"
                + "        var map = new google.maps.Map(document.getElementById('map'), {\n"
                + "          center: {lat: 44.5452, lng: -78.5389},\n"
                + "          zoom: 3\n"
                + "        });\n"
                + "\n"
                + "           var triangleCoords = [\n"
                +             coordinates
                + "        ];\n"
                + "\n"
                + "        // Define a polygon and set its editable property to true.\n"
                + "        var polygon = new google.maps.Polygon({\n"
                + "          paths: triangleCoords,\n"
                + "          editable: false\n"
                + "        });\n"
                + "        polygon.setMap(map);\n"
                + "      }\n"
                + "    </script>\n"
                + "    <script async defer\n"
                + "    src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBR_JJcbibBdwvgGmO8OWXdPyh6mnAG7TE&callback=initMap\">\n"
                + "    </script>\n"
                + "  </body>\n"
                + "</html>");
                                         
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCases;
    // End of variables declaration//GEN-END:variables
}
